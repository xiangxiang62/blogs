(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{472:function(a,_,e){"use strict";e.r(_);var v=e(2),t=Object(v.a)({},(function(){var a=this,_=a._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[_("p",[a._v("大家好，我是香香。")]),a._v(" "),_("p",[a._v("之前给介绍了 "),_("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=Mzg3OTQ0NzI3OA==&mid=2247483934&idx=1&sn=c4338a8c7944c2028b47a32024b4dd17&chksm=cf051f9ff87296897d489cedf37704c643079584add764bf3dd0e9b4099df0277e61df20c505#rd",target:"_blank",rel:"noopener noreferrer"}},[a._v("Collection 容器"),_("OutboundLink")],1),a._v("以及 "),_("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=Mzg3OTQ0NzI3OA==&mid=2247484004&idx=1&sn=bafef4c3a4cb812c154b634e9fa3d0a2&chksm=cf051fe5f87296f350cdcceabc398592a951f7dfa9d68d01d8457815c039c269ca1098f9f036#rd",target:"_blank",rel:"noopener noreferrer"}},[a._v("List"),_("OutboundLink")],1),a._v("、"),_("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=Mzg3OTQ0NzI3OA==&mid=2247484031&idx=2&sn=a7a84a011ccfa58a3eabc85eda32c551&chksm=cf051ffef87296e86805560520d8d807da2a840dac26452e26dc13e735eb9f94f6c77c57d5d7#rd",target:"_blank",rel:"noopener noreferrer"}},[a._v("Set"),_("OutboundLink")],1),a._v(" 接口。")]),a._v(" "),_("p",[a._v("今天我们介绍一个独立于 Collection 容器的集合 - "),_("strong",[_("code",[a._v("Map")])]),a._v("。")]),a._v(" "),_("p",[a._v("了解 Java 集合框架中的 "),_("code",[a._v("Map")]),a._v(" 接口以及与之相关的一些实现类。")]),a._v(" "),_("h2",{attrs:{id:"_1-map-有什么特点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-map-有什么特点"}},[a._v("#")]),a._v(" 1. Map 有什么特点？")]),a._v(" "),_("ul",[_("li",[_("p",[a._v("键值对（K - V）进行数据存储；")])]),a._v(" "),_("li",[_("p",[a._v("键唯一性：在同一个 Map 中，每个键只能对应一个值。如果插入一个已经存在的键，那么就会覆盖原来的值。")])]),a._v(" "),_("li",[_("p",[a._v("可以使用 null 作为键或值：Map 允许使用 null 作为键或值。但需要注意的是，如果调用 get(key) 方法获取一个不存在的键时，会返回 null 值。")])]),a._v(" "),_("li",[_("p",[a._v("遍历方式：Map 没有提供按照元素插入顺序进行遍历的方法。不同的实现类可能会按照不同的方式遍历元素，例如 HashMap 和 LinkedHashMap 实现类会按照哈希表和链表的顺序进行遍历，而 TreeMap 实现类则会按照键的自然顺序进行遍历。")])]),a._v(" "),_("li",[_("p",[a._v("可以保存基本类型的包装类：Map 可以保存基本类型的包装类，例如 Integer、Boolean 等。")])]),a._v(" "),_("li",[_("p",[a._v("支持泛型：Map 支持泛型，可以指定键和值的类型，从而提高代码的安全性和可读性。")])]),a._v(" "),_("li",[_("p",[a._v("适用于各种场景：Map 可以用于各种场景，例如统计词频、缓存数据、实现缓存机制等。")])])]),a._v(" "),_("blockquote",[_("p",[a._v("作为一个常用的数据结构，"),_("code",[a._v("Map")]),a._v(" 在 Java 编程中扮演着重要的角色。")])]),a._v(" "),_("h2",{attrs:{id:"_2-map-和-collection-有什么联系吗"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-map-和-collection-有什么联系吗"}},[a._v("#")]),a._v(" 2. Map 和 Collection 有什么联系吗？")]),a._v(" "),_("p",[a._v("首先，让我们来了解一下 "),_("code",[a._v("Map")]),a._v(" 接口和 "),_("code",[a._v("Collection")]),a._v(" 容器之间的关系。")]),a._v(" "),_("p",[a._v("在 Java 集合框架中，"),_("code",[a._v("Collection")]),a._v(" 是最基本的接口之一，它表示一组对象的集合。")]),a._v(" "),_("p",[a._v("它的子接口包括 List、Set 和 Queue，而 "),_("code",[a._v("Map")]),a._v(" 接口则是一种键值对的映射表，它独立于 "),_("code",[a._v("Collection")]),a._v(" 接口。")]),a._v(" "),_("p",[_("code",[a._v("Map")]),a._v(" 接口提供了将键映射到值的功能，可以通过键来进行查找、插入、删除等操作。")]),a._v(" "),_("p",[a._v("所以，"),_("code",[a._v("Map")]),a._v(" 接口和 "),_("code",[a._v("Collection")]),a._v(" 接口虽然都属于 Java 集合框架，但它们是两个独立的接口，没有继承关系。")]),a._v(" "),_("p",[a._v("换句话说，"),_("code",[a._v("Map")]),a._v(" 接口提供了一种将键映射到值的方式，而 "),_("code",[a._v("Collection")]),a._v(" 接口则更关注元素的存储和操作。")]),a._v(" "),_("h2",{attrs:{id:"_3-那-map-的实现类都有哪些呢"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-那-map-的实现类都有哪些呢"}},[a._v("#")]),a._v(" 3. 那 Map 的实现类都有哪些呢？")]),a._v(" "),_("p",[_("code",[a._v("Map")]),a._v(" 接口有许多实现类，每个实现类都有自己的特点和适用场景。下面我们来介绍几个常用的实现类。")]),a._v(" "),_("h4",{attrs:{id:"_3-1-hashmap"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-hashmap"}},[a._v("#")]),a._v(" 3.1 HashMap")]),a._v(" "),_("p",[_("code",[a._v("HashMap")]),a._v(" 是最常用的 "),_("code",[a._v("Map")]),a._v(" 实现类之一。")]),a._v(" "),_("p",[a._v("基于哈希表实现，提供了快速的查找、插入和删除操作。")]),a._v(" "),_("p",[_("code",[a._v("HashMap")]),a._v(" 允许使用 "),_("code",[a._v("null")]),a._v(" 作为键和值，并且只允许有一个 "),_("code",[a._v("null")]),a._v("。")]),a._v(" "),_("p",[a._v("不保证遍历顺序，即遍历结果可能不是按照元素插入的顺序。")]),a._v(" "),_("p",[a._v("在无并发访问的情况下，通常性能表现较好。")]),a._v(" "),_("h4",{attrs:{id:"_3-2-treemap"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-treemap"}},[a._v("#")]),a._v(" 3.2 TreeMap")]),a._v(" "),_("p",[_("code",[a._v("TreeMap")]),a._v(" 是一个基于红黑树数据结构实现的有序映射。")]),a._v(" "),_("p",[a._v("不允许使用 "),_("code",[a._v("null")]),a._v(" 作为键，但允许使用 "),_("code",[a._v("null")]),a._v(" 作为值。")]),a._v(" "),_("p",[a._v("根据键的自然顺序进行排序，或者通过提供的比较器进行排序。")]),a._v(" "),_("p",[a._v("因此，"),_("code",[a._v("TreeMap")]),a._v(" 的键是有序的，这使得它在需要按照键的顺序遍历的场景中非常有用。")]),a._v(" "),_("p",[a._v("适用于需要按照"),_("code",[a._v("键")]),a._v("排序的场景。")]),a._v(" "),_("h4",{attrs:{id:"_3-3-linkedhashmap"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-linkedhashmap"}},[a._v("#")]),a._v(" 3.3 LinkedHashMap")]),a._v(" "),_("p",[a._v("继承自 HashMap，内部使用双向链表维护插入顺序或者访问顺序。")]),a._v(" "),_("p",[a._v("可以按照插入顺序或者访问顺序进行迭代，因此在迭代顺序方面具有特殊的特点。")]),a._v(" "),_("p",[_("code",[a._v("LinkedHashMap")]),a._v(" 是一个散列表和双向链表的组合实现。")]),a._v(" "),_("p",[a._v("它保留了元素插入的顺序，同时具有快速的查找性能。\n适用于需要保持插入顺序或者访问顺序的场景。")]),a._v(" "),_("blockquote",[_("p",[a._v("相对于 "),_("code",[a._v("HashMap")]),a._v("，"),_("code",[a._v("LinkedHashMap")]),a._v(" 的迭代顺序更接近元素插入的顺序。")])]),a._v(" "),_("h4",{attrs:{id:"_3-4-concurrenthashmap"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-concurrenthashmap"}},[a._v("#")]),a._v(" 3.4 ConcurrentHashMap")]),a._v(" "),_("p",[a._v("是 HashMap 的"),_("code",[a._v("线程安全")]),a._v("版本，采用分段锁机制来提高并发性能。")]),a._v(" "),_("p",[a._v("支持高并发的读和写操作，多个线程可以同时进行读取操作而不需要加锁。")]),a._v(" "),_("p",[a._v("适用于需要在多线程环境下进行并发访问的场景。")]),a._v(" "),_("h4",{attrs:{id:"_3-5-enummap"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-enummap"}},[a._v("#")]),a._v(" 3.5 EnumMap")]),a._v(" "),_("p",[a._v("是专门用于枚举类型作为键的情况下的高效实现。")]),a._v(" "),_("p",[a._v("内部通过数组实现，数组的索引与枚举常量的顺序相对应，因此性能较高。")]),a._v(" "),_("p",[a._v("适用于需要将枚举类型作为键的场景。")]),a._v(" "),_("h1",{attrs:{id:""}},[_("a",{staticClass:"header-anchor",attrs:{href:"#"}},[a._v("#")])]),a._v(" "),_("hr"),a._v(" "),_("h1",{attrs:{id:"-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#-2"}},[a._v("#")])]),a._v(" "),_("blockquote",[_("p",[a._v("以上只是 "),_("code",[a._v("Map")]),a._v(" 接口的一部分常见实现类，每个实现类都有其自身的优势和适用场景。选择合适的实现类取决于你的具体需求。")])]),a._v(" "),_("p",[a._v("除了基本的键值对操作，"),_("code",[a._v("Map")]),a._v(" 接口还提供了许多有用的方法来操作和管理映射表。")]),a._v(" "),_("p",[a._v("例如，你可以使用 "),_("code",[a._v("put(key, value)")]),a._v(" 方法将键值对添加到映射表中，使用 "),_("code",[a._v("get(key)")]),a._v(" 方法获取指定键对应的值，使用 "),_("code",[a._v("containsKey(key)")]),a._v(" 方法判断映射表中是否包含指定的键等等。")]),a._v(" "),_("p",[a._v("这些方法使得我们可以方便地对映射表进行增删改查的操作。")]),a._v(" "),_("h2",{attrs:{id:"_4-map-有哪些使用场景"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-map-有哪些使用场景"}},[a._v("#")]),a._v(" 4. Map 有哪些使用场景？")]),a._v(" "),_("p",[a._v("例如，你可以使用 "),_("code",[a._v("HashMap")]),a._v(" 来统计一段文本中每个单词出现的次数，或者使用 "),_("code",[a._v("TreeMap")]),a._v(" 来实现一个简单的排行榜系统。")]),a._v(" "),_("p",[a._v("无论是对数据的查找、计数还是排序，"),_("code",[a._v("Map")]),a._v(" 都能够提供高效的解决方案。")]),a._v(" "),_("h1",{attrs:{id:"-3"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#-3"}},[a._v("#")])]),a._v(" "),_("blockquote",[_("p",[_("strong",[a._v("总结："),_("code",[a._v("Map")]),a._v(" 接口是 Java 集合框架中非常重要的一部分，它提供了一种键值对的映射方式。通过选择不同的实现类，我们可以根据具体需求来优化映射表的性能和功能。")])]),a._v(" "),_("h1",{attrs:{id:"-4"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#-4"}},[a._v("#")])])]),a._v(" "),_("hr"),a._v(" "),_("h1",{attrs:{id:"-5"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#-5"}},[a._v("#")])]),a._v(" "),_("p",[_("span",{staticStyle:{display:"block","text-align":"center",color:"green"}},[a._v("近期推荐")])]),a._v(" "),_("ul",[_("li",[_("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=Mzg3OTQ0NzI3OA==&mid=2247483934&idx=2&sn=747c4b0ce192cf11e849b8a9c8fe1d90&chksm=cf051f9ff8729689b2cc3097fac0d82c868313c102414bff2265ca27d4a559a1e252ab5252a8#rd",target:"_blank",rel:"noopener noreferrer"}},[a._v("五大编程实用工具推荐，全都是干货！持续更新..."),_("OutboundLink")],1)]),a._v(" "),_("li",[_("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=Mzg3OTQ0NzI3OA==&mid=2247483881&idx=1&sn=e6db1ad68b4a97dd3492245d76521d99&chksm=cf051c68f872957e511a243bb80c1a2607478e08a24a3832f21e8f4fcff951a27c6b2b32d4d1#rd",target:"_blank",rel:"noopener noreferrer"}},[a._v("面向对象编程中的重要概念"),_("OutboundLink")],1)]),a._v(" "),_("li",[_("a",{attrs:{href:"https://mp.weixin.qq.com/s?__biz=Mzg3OTQ0NzI3OA==&mid=2247483777&idx=1&sn=8fb67b684bfa267b34dd20bf8a839524&chksm=cf051c00f8729516435927746f0f67fec891c44ee7de2637ae9bc46601d6a252928fdd50cfbd#rd",target:"_blank",rel:"noopener noreferrer"}},[a._v("了解 String 字符串以及 StringBuilder、StringBuffer 的区别"),_("OutboundLink")],1)])])])}),[],!1,null,null,null);_.default=t.exports}}]);