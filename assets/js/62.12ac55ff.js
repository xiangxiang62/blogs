(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{487:function(t,s,a){"use strict";a.r(s);var n=a(2),r=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),s("p",[t._v("大家好，我是香香。")]),t._v(" "),s("p",[t._v("在当今信息爆炸的时代，数据安全问题备受关注。")]),t._v(" "),s("p",[t._v("特别是在涉及敏感信息或涉及金融交易的领域，如何保障数据的安全成为一个难题。")]),t._v(" "),s("p",[t._v("在数据库系统中，乐观锁和悲观锁作为保障数据安全的利器备受关注。")]),t._v(" "),s("p",[t._v("下面我们就来了解一下"),s("code",[t._v("乐观锁")]),t._v("和"),s("code",[t._v("悲观锁")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"_1-乐观锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-乐观锁"}},[t._v("#")]),t._v(" 1. 乐观锁")]),t._v(" "),s("h3",{attrs:{id:"_1-1-什么是乐观锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-什么是乐观锁"}},[t._v("#")]),t._v(" 1.1 什么是乐观锁？")]),t._v(" "),s("p",[t._v("乐观锁是一种乐观地认为数据不会发生冲突的锁机制。")]),t._v(" "),s("p",[t._v("它的核心思想是 "),s("strong",[s("a",{attrs:{href:""}},[t._v("先进行操作，然后在提交时检查数据是否发生了变化")])]),t._v("。")]),t._v(" "),s("ul",[s("li",[t._v("如果数据未发生变化，操作成功；")]),t._v(" "),s("li",[t._v("如果数据已发生变化，则需要进行冲突解决。")])]),t._v(" "),s("h3",{attrs:{id:"_1-2-乐观锁的应用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-乐观锁的应用场景"}},[t._v("#")]),t._v(" 1.2 乐观锁的应用场景")]),t._v(" "),s("p",[s("a",{attrs:{href:""}},[t._v("乐观锁适用于并发写入较少的场景，如读多写少的情况。")])]),t._v(" "),s("p",[t._v("在这种情况下，乐观锁可以减少锁的竞争，提高系统的并发性能。")]),t._v(" "),s("h3",{attrs:{id:"_1-3-乐观锁的实现方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-乐观锁的实现方式"}},[t._v("#")]),t._v(" 1.3 乐观锁的实现方式")]),t._v(" "),s("p",[t._v("乐观锁的实现方式多种多样，常见的包括 "),s("strong",[t._v("版本号机制")]),t._v("、"),s("strong",[t._v("时间戳机制")]),t._v(" 等。")]),t._v(" "),s("p",[t._v("通过在数据记录中增加版本号或时间戳，并在更新操作时进行版本号或时间戳的比对，可以实现乐观锁。")]),t._v(" "),s("h3",{attrs:{id:"_1-4-乐观锁的优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-乐观锁的优缺点"}},[t._v("#")]),t._v(" 1.4 乐观锁的优缺点")]),t._v(" "),s("ul",[s("li",[s("strong",[s("code",[t._v("优点")])]),t._v("：对性能影响较小，适用于高并发场景。")]),t._v(" "),s("li",[s("strong",[s("code",[t._v("缺点")])]),t._v("：需要解决冲突问题，增加了开发难度。")])]),t._v(" "),s("h3",{attrs:{id:"_1-5-乐观锁示例代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-乐观锁示例代码"}},[t._v("#")]),t._v(" 1.5 乐观锁示例代码")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OptimisticLockExample")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" version"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 版本号字段")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 模拟从数据库获取数据的操作")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" oldVersion "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" version"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取数据的版本号")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 进行业务操作")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 模拟更新数据的操作")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldVersion "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" version"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 检查版本号是否未发生变化")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 更新数据")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 处理冲突逻辑")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("h2",{attrs:{id:"_2-悲观锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-悲观锁"}},[t._v("#")]),t._v(" 2. 悲观锁")]),t._v(" "),s("h3",{attrs:{id:"_2-1-什么是悲观锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-什么是悲观锁"}},[t._v("#")]),t._v(" 2.1 什么是悲观锁？")]),t._v(" "),s("p",[t._v("悲观锁是一种悲观地认为数据会发生冲突的锁机制。")]),t._v(" "),s("p",[t._v("它的核心思想是 "),s("a",{attrs:{href:""}},[t._v("在操作前先对数据进行加锁，确保在操作时数据不会被其他事务修改。")])]),t._v(" "),s("h3",{attrs:{id:"_2-2-悲观锁的应用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-悲观锁的应用场景"}},[t._v("#")]),t._v(" 2.2 悲观锁的应用场景")]),t._v(" "),s("p",[s("a",{attrs:{href:""}},[t._v("悲观锁适用于并发写入较多的场景，如高并发的数据更新操作。")])]),t._v(" "),s("p",[t._v("在这种情况下，悲观锁可以有效避免数据冲突，确保数据的一致性。")]),t._v(" "),s("h3",{attrs:{id:"_2-3-悲观锁的实现方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-悲观锁的实现方式"}},[t._v("#")]),t._v(" 2.3 悲观锁的实现方式")]),t._v(" "),s("p",[t._v("悲观锁的实现方式主要包括 "),s("strong",[t._v("数据库行锁")]),t._v("、"),s("strong",[t._v("表锁")]),t._v("、"),s("strong",[t._v("共享锁")]),t._v(" 等。")]),t._v(" "),s("p",[t._v("通过在操作前对数据进行锁定，可以避免数据的并发修改。")]),t._v(" "),s("h3",{attrs:{id:"_2-4-悲观锁的优缺点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-悲观锁的优缺点"}},[t._v("#")]),t._v(" 2.4 悲观锁的优缺点")]),t._v(" "),s("ul",[s("li",[s("strong",[s("code",[t._v("优点")])]),t._v("：能够有效避免数据冲突，保证数据的一致性。")]),t._v(" "),s("li",[s("strong",[s("code",[t._v("缺点")])]),t._v("：对性能影响较大，可能导致系统的并发性能下降。")])]),t._v(" "),s("h3",{attrs:{id:"_2-5-悲观锁示例代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-悲观锁示例代码"}},[t._v("#")]),t._v(" 2.5 悲观锁示例代码")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token import"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("concurrent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("locks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Lock")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token import"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("java"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("concurrent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("locks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ReentrantLock")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PessimisticLockExample")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Lock")]),t._v(" lock "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ReentrantLock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可重入锁")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateData")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        lock"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("lock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 加锁")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 进行数据更新操作")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ...")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            lock"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("unlock")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 释放锁")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"_3-乐观锁与悲观锁的对比"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-乐观锁与悲观锁的对比"}},[t._v("#")]),t._v(" 3. 乐观锁与悲观锁的对比")]),t._v(" "),s("h3",{attrs:{id:"_3-1-性能对比"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-性能对比"}},[t._v("#")]),t._v(" 3.1 性能对比")]),t._v(" "),s("p",[t._v("乐观锁相对于悲观锁来说，对性能影响较小，适用于"),s("strong",[t._v("高并发")]),t._v("场景；")]),t._v(" "),s("p",[t._v("而悲观锁对性能影响较大，适用于"),s("strong",[t._v("数据更新较频繁")]),t._v("的场景。")]),t._v(" "),s("h3",{attrs:{id:"_3-2-冲突解决"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-冲突解决"}},[t._v("#")]),t._v(" 3.2 冲突解决")]),t._v(" "),s("p",[t._v("乐观锁需要解决冲突问题，开发难度较大；")]),t._v(" "),s("p",[t._v("而悲观锁能够避免冲突问题，保证数据的一致性。")]),t._v(" "),s("h3",{attrs:{id:"_3-3-并发性能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-并发性能"}},[t._v("#")]),t._v(" 3.3 并发性能")]),t._v(" "),s("p",[t._v("乐观锁适用于读多写少的场景，可以提高系统的并发性能；")]),t._v(" "),s("p",[t._v("而悲观锁适用于读少写多的场景，能够保证数据的一致性。")]),t._v(" "),s("h2",{attrs:{id:"_4-如何选择乐观锁或悲观锁"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-如何选择乐观锁或悲观锁"}},[t._v("#")]),t._v(" 4. 如何选择乐观锁或悲观锁")]),t._v(" "),s("p",[t._v("在实际应用中，如何选择乐观锁或悲观锁是一个关键问题。")]),t._v(" "),s("p",[t._v("可以从以下几个方面进行考虑：")]),t._v(" "),s("ul",[s("li",[s("strong",[s("code",[t._v("数据访问模式")])]),t._v("：如果应用场景以读为主，可以考虑使用乐观锁；如果应用场景以写为主，可以考虑使用悲观锁。")]),t._v(" "),s("li",[s("strong",[s("code",[t._v("并发性能需求")])]),t._v("：如果系统对并发性能有较高要求，可以考虑使用乐观锁；如果要求数据一致性较高，可以考虑使用悲观锁。")]),t._v(" "),s("li",[s("strong",[s("code",[t._v("开发难度和成本")])]),t._v("：乐观锁需要解决冲突问题，开发难度较大；悲观锁对性能影响较大，可能增加系统成本。")])]),t._v(" "),s("h2",{attrs:{id:"_5-总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-总结"}},[t._v("#")]),t._v(" 5. 总结")]),t._v(" "),s("p",[t._v("乐观锁和悲观锁作为保障数据安全的利器，在不同的应用场景下发挥着重要作用。")]),t._v(" "),s("p",[t._v("在实际应用中，需要根据具体的业务场景和需求来选择合适的锁机制，以保障数据的安全和系统的性能。")])])}),[],!1,null,null,null);s.default=r.exports}}]);